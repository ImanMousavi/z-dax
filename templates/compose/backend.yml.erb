version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    volumes:
      - ../data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: <%= @config['database']['user'] %>
      POSTGRES_PASSWORD: <%= @config['database']['password'] %>

  redis:
    image: redis:4.0.10-alpine
    restart: always
    volumes:
      - ../data/redis:/data

  influxdb:
    image: influxdb:1.7.8
    restart: always
    environment:
      INFLUXDB_ADMIN_ENABLED: "true"
    volumes:
      - ../config/influxdb/build_candles.sql:/build_candles.sql
      - ../config/influxdb/influxdb.sql:/influxdb.sql
      - ../data/influxdb:/var/lib/influxdb

  vault:
    image: vault:1.3.0
    restart: always
    environment:
      SKIP_SETCAP: 1
      VAULT_ADDR: http://vault:8200
      VAULT_API_ADDR: http://vault:8200
    volumes:
      - ../data/vault:/vault/data
      - ../config/vault/config.json:/vault/config/local.json
      - ../acl_policies:/acl_policies
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/local.json
    labels:
      - "traefik.http.routers.vault-<%= @name %>.rule=Host(`vault.<%= @config['app']['domain'] %>`)"
      - "traefik.http.services.vault-<%= @name %>.loadbalancer.server.port=8200"
      - "traefik.enable=true"
      <%- if @config['ssl']['enabled'] -%>
      - "traefik.http.routers.vault-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.vault-<%= @name %>.tls=true"
      <%- else -%>
      - "traefik.http.routers.vault-<%= @name %>.entrypoints=web"
      <%- end -%>
